name: Deploy Frontend to Production

on:
  push:
    branches: [ prod ]  # D√©clench√© sur push vers production ou main
  pull_request:
    branches: [ prod ]
    types: [ closed ]  # D√©clench√© quand une PR est merg√©e

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    
    # Ne d√©ployer que si c'est un push direct ou une PR merg√©e
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
    - name: Deploy Frontend to VPS
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          set -e
          echo "üñ•Ô∏è VPS connect√© : ${{ secrets.VPS_HOST }}"
          echo "D√©ploiement du frontend d√©marr√©..."
          
          # Aller dans le dossier du projet frontend
          cd /root/projects/Breezy
          
          # Backup de s√©curit√© (optionnel)
          echo "Cr√©ation d'un backup..."
          git stash push -m "Pre-deploy backup $(date)"
          
          # Pull des derni√®res modifications
          echo "R√©cup√©ration des modifications..."
          git fetch origin
          git checkout production  # ou main selon votre branche
          git pull origin production  # ou main
          
          # Aller dans le dossier backend pour red√©ployer le frontend
          cd ../breezy-backend
          
          # Arr√™ter seulement le frontend
          echo "‚èπArr√™t du frontend..."
          docker compose -f docker-compose.prod-ssl.yml stop frontend
          
          # Supprimer l'ancienne image pour forcer un rebuild complet
          echo "Suppression de l'ancienne image..."
          docker rmi breezy-frontend:latest || true
          
          # Reconstruire et red√©marrer SEULEMENT le frontend
          echo "Reconstruction du frontend..."
          docker compose -f docker-compose.prod-ssl.yml up -d --build frontend
          
          # Attendre que le service soit pr√™t
          echo "Attente du d√©marrage..."
          sleep 30
          
          # V√©rifier que le frontend fonctionne
          echo "V√©rification du statut..."
          docker logs breezy-frontend-prod --tail 10
          
          # Test de sant√©
          if docker compose -f docker-compose.prod-ssl.yml ps frontend | grep -q "healthy\|running"; then
            echo "Frontend d√©ploy√© avec succ√®s!"
          else
            echo "Probl√®me avec le d√©ploiement"
            exit 1
          fi
          
          echo "D√©ploiement termin√©!"
